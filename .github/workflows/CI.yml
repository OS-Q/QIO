name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      # - '**.yml'

env:
  UPLOAD_BUILD: false

jobs:
  # check:
  #   name: check
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: Check out
  #     uses: actions/checkout@v2
  #     with:
  #       submodules: "recursive"

  #   - name: python lint
  #     uses: ricardochaves/python-lint@master
  #     with:
  #       python-root-list: "platformio"
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04, windows-latest, macos-latest]
        python-version: [3.7]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: "recursive"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tox

      - name: Run on Linux
        if: startsWith(matrix.os, 'ubuntu')
        env:
          PIO_INSTALL_DEVPLATFORMS_OWNERNAMES: "platformio"
          PIO_INSTALL_DEVPLATFORMS_IGNORE: "ststm8,infineonxmc,intel_mcs51"
        run: |
          # ChipKIT issue: install 32-bit support for GCC PIC32
          sudo apt-get install libc6-i386
          # Free space
          sudo apt clean
          docker rmi $(docker image ls -aq)
          df -h
          # Run
          tox -e testexamples

      - name: Run on macOS
        if: startsWith(matrix.os, 'macos')
        env:
          PIO_INSTALL_DEVPLATFORMS_OWNERNAMES: "platformio"
          PIO_INSTALL_DEVPLATFORMS_IGNORE: "ststm8,infineonxmc,microchippic32,lattice_ice40,gd32v"
        run: |
          df -h
          tox -e testexamples

      - name: Run on Windows
        if: startsWith(matrix.os, 'windows')
        env:
          PLATFORMIO_CORE_DIR: C:/pio
          PLATFORMIO_WORKSPACE_DIR: C:/pio-workspace/$PROJECT_HASH
          PIO_INSTALL_DEVPLATFORMS_OWNERNAMES: "platformio"
          PIO_INSTALL_DEVPLATFORMS_IGNORE: "ststm8,infineonxmc,riscv_gap"
        run: |
          tox -e testexamples

  templete:
    name: templete
    if: github.repository == 'OS-Q/S03'
    strategy:
      fail-fast: false
      matrix:
        platform:
          - "21"
          - "51"
          - "52"
        template:
          - "A"
        os: [ubuntu-latest, windows-latest, macos-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.9

      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -U https://github.com/OS-Q/S03/archive/master.zip
          pio platform install https://github.com/OS-Q/P${{ matrix.platform }}/releases/latest/download/P${{ matrix.platform }}.zip

      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: OS-Q/T${{ matrix.platform }}${{ matrix.template }}
          token: ${{ secrets.OSQ_REPO_TOKEN }}
          path: T${{ matrix.platform }}${{ matrix.template }}

      - name: Build
        working-directory: T${{ matrix.platform }}${{ matrix.template }}
        if: success()
        id: build
        run: |
          pio run -d .
          echo "::set-output name=status::success"

  build_fail:
    needs:
      - build
    name: aftermath
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "recursive"

      - name: notification
        uses: Qful/mqtt-action@master
        with:
          protocol: mqtt
          host: ${{secrets.MQTT_SERVER}}
          port: 1883
          username: ${{secrets.MQTT_USERNAME}}
          password: ${{secrets.MQTT_PASSWORD}}
          topic: ${{github.repository}}/${{github.workflow}}
          message: "build fail"
